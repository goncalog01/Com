Terminals unused in grammar

    tPRIVATE
    tIFX


State 12 conflicts: 1 shift/reduce
State 38 conflicts: 1 shift/reduce
State 51 conflicts: 1 shift/reduce
State 61 conflicts: 1 shift/reduce
State 62 conflicts: 2 shift/reduce
State 65 conflicts: 1 shift/reduce
State 140 conflicts: 1 shift/reduce
State 172 conflicts: 1 shift/reduce
State 178 conflicts: 1 shift/reduce
State 184 conflicts: 2 reduce/reduce
State 197 conflicts: 1 shift/reduce


Grammar

    0 $accept: file $end

    1 file: opt_decs
    2     | opt_decs program

    3 program: tBEGIN block ';' tEND

    4 opt_decs: %empty
    5         | declarations

    6 declarations: declaration
    7             | declarations declaration

    8 declaration: tUSE data_type tIDENTIFIER ';'
    9            | tUSE data_type tIDENTIFIER
   10            | tPUBLIC data_type tIDENTIFIER ';'
   11            | tPUBLIC data_type tIDENTIFIER
   12            | tPUBLIC data_type tIDENTIFIER '=' initializer ';'
   13            | tPUBLIC data_type tIDENTIFIER '=' initializer
   14            | tPUBLIC tTYPE_VAR tIDENTIFIER '=' initializer ';'
   15            | tPUBLIC tTYPE_VAR tIDENTIFIER '=' initializer
   16            | tPUBLIC tIDENTIFIER '=' initializer ';'
   17            | tPUBLIC tIDENTIFIER '=' initializer
   18            | tTYPE_VAR tIDENTIFIER '=' initializer ';'
   19            | tTYPE_VAR tIDENTIFIER '=' initializer
   20            | data_type tIDENTIFIER ';'
   21            | data_type tIDENTIFIER
   22            | data_type tIDENTIFIER '=' initializer ';'
   23            | data_type tIDENTIFIER '=' initializer
   24            | tFOREIGN function_type tIDENTIFIER ';'
   25            | tFOREIGN function_type tIDENTIFIER

   26 initializer: expression
   27            | fundef

   28 opt_data_types: %empty
   29               | data_types

   30 data_types: data_type
   31           | data_types ',' data_type

   32 data_type: basic_type
   33          | function_type

   34 basic_type: tTYPE_TEXT
   35           | tTYPE_INT
   36           | tTYPE_DOUBLE
   37           | tTYPE_VOID
   38           | '[' basic_type ']'

   39 function_type: data_type '<' opt_data_types '>'

   40 fundef: '(' opt_argdecs ')' tRETTYPE data_type ':' block ';'

   41 opt_argdecs: %empty
   42            | argdecs

   43 argdecs: argdec
   44        | argdecs ',' argdec

   45 argdec: data_type tIDENTIFIER

   46 block: '{' opt_decs opt_instrs '}'

   47 opt_instrs: %empty
   48           | instructions

   49 instructions: instruction ';'
   50             | instructions instruction ';'
   51             | no_semi_colon_instr
   52             | instructions no_semi_colon_instr

   53 instruction: tWHILE '(' expression ')' tDO block
   54            | expression
   55            | tWRITE expressions
   56            | tWRITELN expressions
   57            | tAGAIN
   58            | tSTOP
   59            | tRETURN
   60            | tRETURN expression
   61            | tRETURN fundef
   62            | block

   63 no_semi_colon_instr: tIF '(' expression ')' tTHEN block ';'
   64                    | tIF '(' expression ')' tTHEN block ';' elif
   65                    | lvalue '=' fundef
   66                    | lvalue '=' expression

   67 elif: tELSE block ';'
   68     | tELIF '(' expression ')' tTHEN block ';'
   69     | tELIF '(' expression ')' tTHEN block ';' elif

   70 lvalue: tIDENTIFIER
   71       | lvalue '[' expression ']'
   72       | '(' expression ')' '[' expression ']'
   73       | tIDENTIFIER '(' opt_args ')' '[' expression ']'
   74       | '(' fundef ')' '(' opt_args ')' '[' expression ']'
   75       | '@' '(' opt_args ')' '[' expression ']'

   76 opt_args: %empty
   77         | args

   78 args: expression
   79     | fundef
   80     | args ',' expression
   81     | args ',' fundef

   82 expressions: expression
   83            | expressions ',' expression

   84 expression: integer
   85           | double
   86           | text
   87           | tNULL
   88           | lvalue
   89           | lvalue '=' expression
   90           | lvalue '=' fundef
   91           | expression '+' expression
   92           | expression '-' expression
   93           | expression '*' expression
   94           | expression '/' expression
   95           | expression '%' expression
   96           | expression '<' expression
   97           | expression tLE expression
   98           | expression tEQ expression
   99           | expression tGE expression
  100           | expression '>' expression
  101           | expression tNE expression
  102           | expression tAND expression
  103           | expression tOR expression
  104           | '-' expression
  105           | '+' expression
  106           | tNOT expression
  107           | tINPUT
  108           | tIDENTIFIER '(' opt_args ')'
  109           | '(' fundef ')' '(' opt_args ')'
  110           | '@' '(' opt_args ')'
  111           | tSIZEOF '(' expression ')'
  112           | '(' expression ')'
  113           | '[' expression ']'
  114           | lvalue '?'

  115 integer: tINTEGER

  116 double: tDOUBLE

  117 text: tTEXT
  118     | text tTEXT


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 95
    '(' (40) 40 53 63 64 68 69 72 73 74 75 108 109 110 111 112
    ')' (41) 40 53 63 64 68 69 72 73 74 75 108 109 110 111 112
    '*' (42) 93
    '+' (43) 91 105
    ',' (44) 31 44 80 81 83
    '-' (45) 92 104
    '/' (47) 94
    ':' (58) 40
    ';' (59) 3 8 10 12 14 16 18 20 22 24 40 49 50 63 64 67 68 69
    '<' (60) 39 96
    '=' (61) 12 13 14 15 16 17 18 19 22 23 65 66 89 90
    '>' (62) 39 100
    '?' (63) 114
    '@' (64) 75 110
    '[' (91) 38 71 72 73 74 75 113
    ']' (93) 38 71 72 73 74 75 113
    '{' (123) 46
    '}' (125) 46
    error (256)
    tAND (258) 102
    tOR (259) 103
    tNE (260) 101
    tLE (261) 97
    tGE (262) 99
    tEQ (263) 98
    tNOT (264) 106
    tSIZEOF (265) 111
    tINPUT (266) 107
    tWRITE (267) 55
    tWRITELN (268) 56
    tPUBLIC (269) 10 11 12 13 14 15 16 17
    tUSE (270) 8 9
    tFOREIGN (271) 24 25
    tPRIVATE (272)
    tTYPE_VAR (273) 14 15 18 19
    tTYPE_INT (274) 35
    tTYPE_DOUBLE (275) 36
    tTYPE_TEXT (276) 34
    tTYPE_VOID (277) 37
    tRETTYPE (278) 40
    tIF (279) 63 64
    tTHEN (280) 63 64 68 69
    tELIF (281) 68 69
    tELSE (282) 67
    tWHILE (283) 53
    tDO (284) 53
    tBEGIN (285) 3
    tEND (286) 3
    tSTOP (287) 58
    tAGAIN (288) 57
    tRETURN (289) 59 60 61
    tIFX (290)
    tINTEGER <i> (291) 115
    tDOUBLE <d> (292) 116
    tIDENTIFIER <s> (293) 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 45 70 73 108
    tTEXT <s> (294) 117 118
    tNULL <expression> (295) 87
    tUNARY (296)


Nonterminals, with rules where they appear

    $accept (61)
        on left: 0
    file <sequence> (62)
        on left: 1 2
        on right: 0
    program <node> (63)
        on left: 3
        on right: 2
    opt_decs <sequence> (64)
        on left: 4 5
        on right: 1 2 46
    declarations <sequence> (65)
        on left: 6 7
        on right: 5 7
    declaration <node> (66)
        on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
        on right: 6 7
    initializer <expression> (67)
        on left: 26 27
        on right: 12 13 14 15 16 17 18 19 22 23
    opt_data_types <types> (68)
        on left: 28 29
        on right: 39
    data_types <types> (69)
        on left: 30 31
        on right: 29 31
    data_type <type> (70)
        on left: 32 33
        on right: 8 9 10 11 12 13 20 21 22 23 30 31 39 40 45
    basic_type <type> (71)
        on left: 34 35 36 37 38
        on right: 32 38
    function_type <type> (72)
        on left: 39
        on right: 24 25 33
    fundef <expression> (73)
        on left: 40
        on right: 27 61 65 74 79 81 90 109
    opt_argdecs <sequence> (74)
        on left: 41 42
        on right: 40
    argdecs <sequence> (75)
        on left: 43 44
        on right: 42 44
    argdec <node> (76)
        on left: 45
        on right: 43 44
    block <block> (77)
        on left: 46
        on right: 3 40 53 62 63 64 67 68 69
    opt_instrs <sequence> (78)
        on left: 47 48
        on right: 46
    instructions <sequence> (79)
        on left: 49 50 51 52
        on right: 48 50 52
    instruction <node> (80)
        on left: 53 54 55 56 57 58 59 60 61 62
        on right: 49 50
    no_semi_colon_instr <node> (81)
        on left: 63 64 65 66
        on right: 51 52
    elif <node> (82)
        on left: 67 68 69
        on right: 64 69
    lvalue <lvalue> (83)
        on left: 70 71 72 73 74 75
        on right: 65 66 71 88 89 90 114
    opt_args <sequence> (84)
        on left: 76 77
        on right: 73 74 75 108 109 110
    args <sequence> (85)
        on left: 78 79 80 81
        on right: 77 80 81
    expressions <sequence> (86)
        on left: 82 83
        on right: 55 56 83
    expression <expression> (87)
        on left: 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114
        on right: 26 53 54 60 63 64 66 68 69 71 72 73 74 75 78 80 82 83 89 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 111 112 113
    integer <expression> (88)
        on left: 115
        on right: 84
    double <expression> (89)
        on left: 116
        on right: 85
    text <s> (90)
        on left: 117 118
        on right: 86 118


State 0

    0 $accept: . file $end

    tPUBLIC       shift, and go to state 1
    tUSE          shift, and go to state 2
    tFOREIGN      shift, and go to state 3
    tTYPE_VAR     shift, and go to state 4
    tTYPE_INT     shift, and go to state 5
    tTYPE_DOUBLE  shift, and go to state 6
    tTYPE_TEXT    shift, and go to state 7
    tTYPE_VOID    shift, and go to state 8
    '['           shift, and go to state 9

    $default  reduce using rule 4 (opt_decs)

    file           go to state 10
    opt_decs       go to state 11
    declarations   go to state 12
    declaration    go to state 13
    data_type      go to state 14
    basic_type     go to state 15
    function_type  go to state 16


State 1

   10 declaration: tPUBLIC . data_type tIDENTIFIER ';'
   11            | tPUBLIC . data_type tIDENTIFIER
   12            | tPUBLIC . data_type tIDENTIFIER '=' initializer ';'
   13            | tPUBLIC . data_type tIDENTIFIER '=' initializer
   14            | tPUBLIC . tTYPE_VAR tIDENTIFIER '=' initializer ';'
   15            | tPUBLIC . tTYPE_VAR tIDENTIFIER '=' initializer
   16            | tPUBLIC . tIDENTIFIER '=' initializer ';'
   17            | tPUBLIC . tIDENTIFIER '=' initializer

    tTYPE_VAR     shift, and go to state 17
    tTYPE_INT     shift, and go to state 5
    tTYPE_DOUBLE  shift, and go to state 6
    tTYPE_TEXT    shift, and go to state 7
    tTYPE_VOID    shift, and go to state 8
    tIDENTIFIER   shift, and go to state 18
    '['           shift, and go to state 9

    data_type      go to state 19
    basic_type     go to state 15
    function_type  go to state 16


State 2

    8 declaration: tUSE . data_type tIDENTIFIER ';'
    9            | tUSE . data_type tIDENTIFIER

    tTYPE_INT     shift, and go to state 5
    tTYPE_DOUBLE  shift, and go to state 6
    tTYPE_TEXT    shift, and go to state 7
    tTYPE_VOID    shift, and go to state 8
    '['           shift, and go to state 9

    data_type      go to state 20
    basic_type     go to state 15
    function_type  go to state 16


State 3

   24 declaration: tFOREIGN . function_type tIDENTIFIER ';'
   25            | tFOREIGN . function_type tIDENTIFIER

    tTYPE_INT     shift, and go to state 5
    tTYPE_DOUBLE  shift, and go to state 6
    tTYPE_TEXT    shift, and go to state 7
    tTYPE_VOID    shift, and go to state 8
    '['           shift, and go to state 9

    data_type      go to state 21
    basic_type     go to state 15
    function_type  go to state 22


State 4

   18 declaration: tTYPE_VAR . tIDENTIFIER '=' initializer ';'
   19            | tTYPE_VAR . tIDENTIFIER '=' initializer

    tIDENTIFIER  shift, and go to state 23


State 5

   35 basic_type: tTYPE_INT .

    $default  reduce using rule 35 (basic_type)


State 6

   36 basic_type: tTYPE_DOUBLE .

    $default  reduce using rule 36 (basic_type)


State 7

   34 basic_type: tTYPE_TEXT .

    $default  reduce using rule 34 (basic_type)


State 8

   37 basic_type: tTYPE_VOID .

    $default  reduce using rule 37 (basic_type)


State 9

   38 basic_type: '[' . basic_type ']'

    tTYPE_INT     shift, and go to state 5
    tTYPE_DOUBLE  shift, and go to state 6
    tTYPE_TEXT    shift, and go to state 7
    tTYPE_VOID    shift, and go to state 8
    '['           shift, and go to state 9

    basic_type  go to state 24


State 10

    0 $accept: file . $end

    $end  shift, and go to state 25


State 11

    1 file: opt_decs .
    2     | opt_decs . program

    tBEGIN  shift, and go to state 26

    $default  reduce using rule 1 (file)

    program  go to state 27


State 12

    5 opt_decs: declarations .
    7 declarations: declarations . declaration

    tPUBLIC       shift, and go to state 1
    tUSE          shift, and go to state 2
    tFOREIGN      shift, and go to state 3
    tTYPE_VAR     shift, and go to state 4
    tTYPE_INT     shift, and go to state 5
    tTYPE_DOUBLE  shift, and go to state 6
    tTYPE_TEXT    shift, and go to state 7
    tTYPE_VOID    shift, and go to state 8
    '['           shift, and go to state 9

    '['       [reduce using rule 5 (opt_decs)]
    $default  reduce using rule 5 (opt_decs)

    declaration    go to state 28
    data_type      go to state 14
    basic_type     go to state 15
    function_type  go to state 16


State 13

    6 declarations: declaration .

    $default  reduce using rule 6 (declarations)


State 14

   20 declaration: data_type . tIDENTIFIER ';'
   21            | data_type . tIDENTIFIER
   22            | data_type . tIDENTIFIER '=' initializer ';'
   23            | data_type . tIDENTIFIER '=' initializer
   39 function_type: data_type . '<' opt_data_types '>'

    tIDENTIFIER  shift, and go to state 29
    '<'          shift, and go to state 30


State 15

   32 data_type: basic_type .

    $default  reduce using rule 32 (data_type)


State 16

   33 data_type: function_type .

    $default  reduce using rule 33 (data_type)


State 17

   14 declaration: tPUBLIC tTYPE_VAR . tIDENTIFIER '=' initializer ';'
   15            | tPUBLIC tTYPE_VAR . tIDENTIFIER '=' initializer

    tIDENTIFIER  shift, and go to state 31


State 18

   16 declaration: tPUBLIC tIDENTIFIER . '=' initializer ';'
   17            | tPUBLIC tIDENTIFIER . '=' initializer

    '='  shift, and go to state 32


State 19

   10 declaration: tPUBLIC data_type . tIDENTIFIER ';'
   11            | tPUBLIC data_type . tIDENTIFIER
   12            | tPUBLIC data_type . tIDENTIFIER '=' initializer ';'
   13            | tPUBLIC data_type . tIDENTIFIER '=' initializer
   39 function_type: data_type . '<' opt_data_types '>'

    tIDENTIFIER  shift, and go to state 33
    '<'          shift, and go to state 30


State 20

    8 declaration: tUSE data_type . tIDENTIFIER ';'
    9            | tUSE data_type . tIDENTIFIER
   39 function_type: data_type . '<' opt_data_types '>'

    tIDENTIFIER  shift, and go to state 34
    '<'          shift, and go to state 30


State 21

   39 function_type: data_type . '<' opt_data_types '>'

    '<'  shift, and go to state 30


State 22

   24 declaration: tFOREIGN function_type . tIDENTIFIER ';'
   25            | tFOREIGN function_type . tIDENTIFIER
   33 data_type: function_type .

    tIDENTIFIER  shift, and go to state 35

    $default  reduce using rule 33 (data_type)


State 23

   18 declaration: tTYPE_VAR tIDENTIFIER . '=' initializer ';'
   19            | tTYPE_VAR tIDENTIFIER . '=' initializer

    '='  shift, and go to state 36


State 24

   38 basic_type: '[' basic_type . ']'

    ']'  shift, and go to state 37


State 25

    0 $accept: file $end .

    $default  accept


State 26

    3 program: tBEGIN . block ';' tEND

    '{'  shift, and go to state 38

    block  go to state 39


State 27

    2 file: opt_decs program .

    $default  reduce using rule 2 (file)


State 28

    7 declarations: declarations declaration .

    $default  reduce using rule 7 (declarations)


State 29

   20 declaration: data_type tIDENTIFIER . ';'
   21            | data_type tIDENTIFIER .
   22            | data_type tIDENTIFIER . '=' initializer ';'
   23            | data_type tIDENTIFIER . '=' initializer

    '='  shift, and go to state 40
    ';'  shift, and go to state 41

    $default  reduce using rule 21 (declaration)


State 30

   39 function_type: data_type '<' . opt_data_types '>'

    tTYPE_INT     shift, and go to state 5
    tTYPE_DOUBLE  shift, and go to state 6
    tTYPE_TEXT    shift, and go to state 7
    tTYPE_VOID    shift, and go to state 8
    '['           shift, and go to state 9

    $default  reduce using rule 28 (opt_data_types)

    opt_data_types  go to state 42
    data_types      go to state 43
    data_type       go to state 44
    basic_type      go to state 15
    function_type   go to state 16


State 31

   14 declaration: tPUBLIC tTYPE_VAR tIDENTIFIER . '=' initializer ';'
   15            | tPUBLIC tTYPE_VAR tIDENTIFIER . '=' initializer

    '='  shift, and go to state 45


State 32

   16 declaration: tPUBLIC tIDENTIFIER '=' . initializer ';'
   17            | tPUBLIC tIDENTIFIER '=' . initializer

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 57
    '@'          shift, and go to state 58

    initializer  go to state 59
    fundef       go to state 60
    lvalue       go to state 61
    expression   go to state 62
    integer      go to state 63
    double       go to state 64
    text         go to state 65


State 33

   10 declaration: tPUBLIC data_type tIDENTIFIER . ';'
   11            | tPUBLIC data_type tIDENTIFIER .
   12            | tPUBLIC data_type tIDENTIFIER . '=' initializer ';'
   13            | tPUBLIC data_type tIDENTIFIER . '=' initializer

    '='  shift, and go to state 66
    ';'  shift, and go to state 67

    $default  reduce using rule 11 (declaration)


State 34

    8 declaration: tUSE data_type tIDENTIFIER . ';'
    9            | tUSE data_type tIDENTIFIER .

    ';'  shift, and go to state 68

    $default  reduce using rule 9 (declaration)


State 35

   24 declaration: tFOREIGN function_type tIDENTIFIER . ';'
   25            | tFOREIGN function_type tIDENTIFIER .

    ';'  shift, and go to state 69

    $default  reduce using rule 25 (declaration)


State 36

   18 declaration: tTYPE_VAR tIDENTIFIER '=' . initializer ';'
   19            | tTYPE_VAR tIDENTIFIER '=' . initializer

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 57
    '@'          shift, and go to state 58

    initializer  go to state 70
    fundef       go to state 60
    lvalue       go to state 61
    expression   go to state 62
    integer      go to state 63
    double       go to state 64
    text         go to state 65


State 37

   38 basic_type: '[' basic_type ']' .

    $default  reduce using rule 38 (basic_type)


State 38

   46 block: '{' . opt_decs opt_instrs '}'

    tPUBLIC       shift, and go to state 1
    tUSE          shift, and go to state 2
    tFOREIGN      shift, and go to state 3
    tTYPE_VAR     shift, and go to state 4
    tTYPE_INT     shift, and go to state 5
    tTYPE_DOUBLE  shift, and go to state 6
    tTYPE_TEXT    shift, and go to state 7
    tTYPE_VOID    shift, and go to state 8
    '['           shift, and go to state 9

    '['       [reduce using rule 4 (opt_decs)]
    $default  reduce using rule 4 (opt_decs)

    opt_decs       go to state 71
    declarations   go to state 12
    declaration    go to state 13
    data_type      go to state 14
    basic_type     go to state 15
    function_type  go to state 16


State 39

    3 program: tBEGIN block . ';' tEND

    ';'  shift, and go to state 72


State 40

   22 declaration: data_type tIDENTIFIER '=' . initializer ';'
   23            | data_type tIDENTIFIER '=' . initializer

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 57
    '@'          shift, and go to state 58

    initializer  go to state 73
    fundef       go to state 60
    lvalue       go to state 61
    expression   go to state 62
    integer      go to state 63
    double       go to state 64
    text         go to state 65


State 41

   20 declaration: data_type tIDENTIFIER ';' .

    $default  reduce using rule 20 (declaration)


State 42

   39 function_type: data_type '<' opt_data_types . '>'

    '>'  shift, and go to state 74


State 43

   29 opt_data_types: data_types .
   31 data_types: data_types . ',' data_type

    ','  shift, and go to state 75

    $default  reduce using rule 29 (opt_data_types)


State 44

   30 data_types: data_type .
   39 function_type: data_type . '<' opt_data_types '>'

    '<'  shift, and go to state 30

    $default  reduce using rule 30 (data_types)


State 45

   14 declaration: tPUBLIC tTYPE_VAR tIDENTIFIER '=' . initializer ';'
   15            | tPUBLIC tTYPE_VAR tIDENTIFIER '=' . initializer

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 57
    '@'          shift, and go to state 58

    initializer  go to state 76
    fundef       go to state 60
    lvalue       go to state 61
    expression   go to state 62
    integer      go to state 63
    double       go to state 64
    text         go to state 65


State 46

  106 expression: tNOT . expression

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 78
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 47

  111 expression: tSIZEOF . '(' expression ')'

    '('  shift, and go to state 79


State 48

  107 expression: tINPUT .

    $default  reduce using rule 107 (expression)


State 49

  115 integer: tINTEGER .

    $default  reduce using rule 115 (integer)


State 50

  116 double: tDOUBLE .

    $default  reduce using rule 116 (double)


State 51

   70 lvalue: tIDENTIFIER .
   73       | tIDENTIFIER . '(' opt_args ')' '[' expression ']'
  108 expression: tIDENTIFIER . '(' opt_args ')'

    '('  shift, and go to state 80

    '('       [reduce using rule 70 (lvalue)]
    $default  reduce using rule 70 (lvalue)


State 52

  117 text: tTEXT .

    $default  reduce using rule 117 (text)


State 53

   87 expression: tNULL .

    $default  reduce using rule 87 (expression)


State 54

  105 expression: '+' . expression

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 81
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 55

  104 expression: '-' . expression

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 82
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 56

  113 expression: '[' . expression ']'

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 83
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 57

   40 fundef: '(' . opt_argdecs ')' tRETTYPE data_type ':' block ';'
   72 lvalue: '(' . expression ')' '[' expression ']'
   74       | '(' . fundef ')' '(' opt_args ')' '[' expression ']'
  109 expression: '(' . fundef ')' '(' opt_args ')'
  112           | '(' . expression ')'

    tNOT          shift, and go to state 46
    tSIZEOF       shift, and go to state 47
    tINPUT        shift, and go to state 48
    tTYPE_INT     shift, and go to state 5
    tTYPE_DOUBLE  shift, and go to state 6
    tTYPE_TEXT    shift, and go to state 7
    tTYPE_VOID    shift, and go to state 8
    tINTEGER      shift, and go to state 49
    tDOUBLE       shift, and go to state 50
    tIDENTIFIER   shift, and go to state 51
    tTEXT         shift, and go to state 52
    tNULL         shift, and go to state 53
    '+'           shift, and go to state 54
    '-'           shift, and go to state 55
    '['           shift, and go to state 84
    '('           shift, and go to state 57
    '@'           shift, and go to state 58

    $default  reduce using rule 41 (opt_argdecs)

    data_type      go to state 85
    basic_type     go to state 15
    function_type  go to state 16
    fundef         go to state 86
    opt_argdecs    go to state 87
    argdecs        go to state 88
    argdec         go to state 89
    lvalue         go to state 61
    expression     go to state 90
    integer        go to state 63
    double         go to state 64
    text           go to state 65


State 58

   75 lvalue: '@' . '(' opt_args ')' '[' expression ']'
  110 expression: '@' . '(' opt_args ')'

    '('  shift, and go to state 91


State 59

   16 declaration: tPUBLIC tIDENTIFIER '=' initializer . ';'
   17            | tPUBLIC tIDENTIFIER '=' initializer .

    ';'  shift, and go to state 92

    $default  reduce using rule 17 (declaration)


State 60

   27 initializer: fundef .

    $default  reduce using rule 27 (initializer)


State 61

   71 lvalue: lvalue . '[' expression ']'
   88 expression: lvalue .
   89           | lvalue . '=' expression
   90           | lvalue . '=' fundef
  114           | lvalue . '?'

    '='  shift, and go to state 93
    '?'  shift, and go to state 94
    '['  shift, and go to state 95

    '['       [reduce using rule 88 (expression)]
    $default  reduce using rule 88 (expression)


State 62

   26 initializer: expression .
   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108

    '+'       [reduce using rule 26 (initializer)]
    '-'       [reduce using rule 26 (initializer)]
    $default  reduce using rule 26 (initializer)


State 63

   84 expression: integer .

    $default  reduce using rule 84 (expression)


State 64

   85 expression: double .

    $default  reduce using rule 85 (expression)


State 65

   86 expression: text .
  118 text: text . tTEXT

    tTEXT  shift, and go to state 109

    tTEXT     [reduce using rule 86 (expression)]
    $default  reduce using rule 86 (expression)


State 66

   12 declaration: tPUBLIC data_type tIDENTIFIER '=' . initializer ';'
   13            | tPUBLIC data_type tIDENTIFIER '=' . initializer

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 57
    '@'          shift, and go to state 58

    initializer  go to state 110
    fundef       go to state 60
    lvalue       go to state 61
    expression   go to state 62
    integer      go to state 63
    double       go to state 64
    text         go to state 65


State 67

   10 declaration: tPUBLIC data_type tIDENTIFIER ';' .

    $default  reduce using rule 10 (declaration)


State 68

    8 declaration: tUSE data_type tIDENTIFIER ';' .

    $default  reduce using rule 8 (declaration)


State 69

   24 declaration: tFOREIGN function_type tIDENTIFIER ';' .

    $default  reduce using rule 24 (declaration)


State 70

   18 declaration: tTYPE_VAR tIDENTIFIER '=' initializer . ';'
   19            | tTYPE_VAR tIDENTIFIER '=' initializer .

    ';'  shift, and go to state 111

    $default  reduce using rule 19 (declaration)


State 71

   46 block: '{' opt_decs . opt_instrs '}'

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tWRITE       shift, and go to state 112
    tWRITELN     shift, and go to state 113
    tIF          shift, and go to state 114
    tWHILE       shift, and go to state 115
    tSTOP        shift, and go to state 116
    tAGAIN       shift, and go to state 117
    tRETURN      shift, and go to state 118
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '{'          shift, and go to state 38
    '@'          shift, and go to state 58

    $default  reduce using rule 47 (opt_instrs)

    block                go to state 119
    opt_instrs           go to state 120
    instructions         go to state 121
    instruction          go to state 122
    no_semi_colon_instr  go to state 123
    lvalue               go to state 124
    expression           go to state 125
    integer              go to state 63
    double               go to state 64
    text                 go to state 65


State 72

    3 program: tBEGIN block ';' . tEND

    tEND  shift, and go to state 126


State 73

   22 declaration: data_type tIDENTIFIER '=' initializer . ';'
   23            | data_type tIDENTIFIER '=' initializer .

    ';'  shift, and go to state 127

    $default  reduce using rule 23 (declaration)


State 74

   39 function_type: data_type '<' opt_data_types '>' .

    $default  reduce using rule 39 (function_type)


State 75

   31 data_types: data_types ',' . data_type

    tTYPE_INT     shift, and go to state 5
    tTYPE_DOUBLE  shift, and go to state 6
    tTYPE_TEXT    shift, and go to state 7
    tTYPE_VOID    shift, and go to state 8
    '['           shift, and go to state 9

    data_type      go to state 128
    basic_type     go to state 15
    function_type  go to state 16


State 76

   14 declaration: tPUBLIC tTYPE_VAR tIDENTIFIER '=' initializer . ';'
   15            | tPUBLIC tTYPE_VAR tIDENTIFIER '=' initializer .

    ';'  shift, and go to state 129

    $default  reduce using rule 15 (declaration)


State 77

   72 lvalue: '(' . expression ')' '[' expression ']'
   74       | '(' . fundef ')' '(' opt_args ')' '[' expression ']'
  109 expression: '(' . fundef ')' '(' opt_args ')'
  112           | '(' . expression ')'

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 57
    '@'          shift, and go to state 58

    fundef      go to state 86
    lvalue      go to state 61
    expression  go to state 90
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 78

   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression
  106           | tNOT expression .

    tNE  shift, and go to state 98
    tLE  shift, and go to state 99
    tGE  shift, and go to state 100
    tEQ  shift, and go to state 101
    '<'  shift, and go to state 102
    '>'  shift, and go to state 103
    '+'  shift, and go to state 104
    '-'  shift, and go to state 105
    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    $default  reduce using rule 106 (expression)


State 79

  111 expression: tSIZEOF '(' . expression ')'

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 130
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 80

   73 lvalue: tIDENTIFIER '(' . opt_args ')' '[' expression ']'
  108 expression: tIDENTIFIER '(' . opt_args ')'

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 57
    '@'          shift, and go to state 58

    $default  reduce using rule 76 (opt_args)

    fundef      go to state 131
    lvalue      go to state 61
    opt_args    go to state 132
    args        go to state 133
    expression  go to state 134
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 81

   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression
  105           | '+' expression .

    $default  reduce using rule 105 (expression)


State 82

   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression
  104           | '-' expression .

    $default  reduce using rule 104 (expression)


State 83

   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression
  113           | '[' expression . ']'

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108
    ']'   shift, and go to state 135


State 84

   38 basic_type: '[' . basic_type ']'
  113 expression: '[' . expression ']'

    tNOT          shift, and go to state 46
    tSIZEOF       shift, and go to state 47
    tINPUT        shift, and go to state 48
    tTYPE_INT     shift, and go to state 5
    tTYPE_DOUBLE  shift, and go to state 6
    tTYPE_TEXT    shift, and go to state 7
    tTYPE_VOID    shift, and go to state 8
    tINTEGER      shift, and go to state 49
    tDOUBLE       shift, and go to state 50
    tIDENTIFIER   shift, and go to state 51
    tTEXT         shift, and go to state 52
    tNULL         shift, and go to state 53
    '+'           shift, and go to state 54
    '-'           shift, and go to state 55
    '['           shift, and go to state 84
    '('           shift, and go to state 77
    '@'           shift, and go to state 58

    basic_type  go to state 24
    lvalue      go to state 61
    expression  go to state 83
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 85

   39 function_type: data_type . '<' opt_data_types '>'
   45 argdec: data_type . tIDENTIFIER

    tIDENTIFIER  shift, and go to state 136
    '<'          shift, and go to state 30


State 86

   74 lvalue: '(' fundef . ')' '(' opt_args ')' '[' expression ']'
  109 expression: '(' fundef . ')' '(' opt_args ')'

    ')'  shift, and go to state 137


State 87

   40 fundef: '(' opt_argdecs . ')' tRETTYPE data_type ':' block ';'

    ')'  shift, and go to state 138


State 88

   42 opt_argdecs: argdecs .
   44 argdecs: argdecs . ',' argdec

    ','  shift, and go to state 139

    $default  reduce using rule 42 (opt_argdecs)


State 89

   43 argdecs: argdec .

    $default  reduce using rule 43 (argdecs)


State 90

   72 lvalue: '(' expression . ')' '[' expression ']'
   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression
  112           | '(' expression . ')'

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108
    ')'   shift, and go to state 140


State 91

   75 lvalue: '@' '(' . opt_args ')' '[' expression ']'
  110 expression: '@' '(' . opt_args ')'

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 57
    '@'          shift, and go to state 58

    $default  reduce using rule 76 (opt_args)

    fundef      go to state 131
    lvalue      go to state 61
    opt_args    go to state 141
    args        go to state 133
    expression  go to state 134
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 92

   16 declaration: tPUBLIC tIDENTIFIER '=' initializer ';' .

    $default  reduce using rule 16 (declaration)


State 93

   89 expression: lvalue '=' . expression
   90           | lvalue '=' . fundef

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 57
    '@'          shift, and go to state 58

    fundef      go to state 142
    lvalue      go to state 61
    expression  go to state 143
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 94

  114 expression: lvalue '?' .

    $default  reduce using rule 114 (expression)


State 95

   71 lvalue: lvalue '[' . expression ']'

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 144
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 96

  102 expression: expression tAND . expression

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 145
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 97

  103 expression: expression tOR . expression

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 146
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 98

  101 expression: expression tNE . expression

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 147
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 99

   97 expression: expression tLE . expression

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 148
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 100

   99 expression: expression tGE . expression

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 149
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 101

   98 expression: expression tEQ . expression

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 150
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 102

   96 expression: expression '<' . expression

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 151
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 103

  100 expression: expression '>' . expression

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 152
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 104

   91 expression: expression '+' . expression

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 153
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 105

   92 expression: expression '-' . expression

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 154
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 106

   93 expression: expression '*' . expression

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 155
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 107

   94 expression: expression '/' . expression

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 156
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 108

   95 expression: expression '%' . expression

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 157
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 109

  118 text: text tTEXT .

    $default  reduce using rule 118 (text)


State 110

   12 declaration: tPUBLIC data_type tIDENTIFIER '=' initializer . ';'
   13            | tPUBLIC data_type tIDENTIFIER '=' initializer .

    ';'  shift, and go to state 158

    $default  reduce using rule 13 (declaration)


State 111

   18 declaration: tTYPE_VAR tIDENTIFIER '=' initializer ';' .

    $default  reduce using rule 18 (declaration)


State 112

   55 instruction: tWRITE . expressions

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue       go to state 61
    expressions  go to state 159
    expression   go to state 160
    integer      go to state 63
    double       go to state 64
    text         go to state 65


State 113

   56 instruction: tWRITELN . expressions

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue       go to state 61
    expressions  go to state 161
    expression   go to state 160
    integer      go to state 63
    double       go to state 64
    text         go to state 65


State 114

   63 no_semi_colon_instr: tIF . '(' expression ')' tTHEN block ';'
   64                    | tIF . '(' expression ')' tTHEN block ';' elif

    '('  shift, and go to state 162


State 115

   53 instruction: tWHILE . '(' expression ')' tDO block

    '('  shift, and go to state 163


State 116

   58 instruction: tSTOP .

    $default  reduce using rule 58 (instruction)


State 117

   57 instruction: tAGAIN .

    $default  reduce using rule 57 (instruction)


State 118

   59 instruction: tRETURN .
   60            | tRETURN . expression
   61            | tRETURN . fundef

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 57
    '@'          shift, and go to state 58

    $default  reduce using rule 59 (instruction)

    fundef      go to state 164
    lvalue      go to state 61
    expression  go to state 165
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 119

   62 instruction: block .

    $default  reduce using rule 62 (instruction)


State 120

   46 block: '{' opt_decs opt_instrs . '}'

    '}'  shift, and go to state 166


State 121

   48 opt_instrs: instructions .
   50 instructions: instructions . instruction ';'
   52             | instructions . no_semi_colon_instr

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tWRITE       shift, and go to state 112
    tWRITELN     shift, and go to state 113
    tIF          shift, and go to state 114
    tWHILE       shift, and go to state 115
    tSTOP        shift, and go to state 116
    tAGAIN       shift, and go to state 117
    tRETURN      shift, and go to state 118
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '{'          shift, and go to state 38
    '@'          shift, and go to state 58

    $default  reduce using rule 48 (opt_instrs)

    block                go to state 119
    instruction          go to state 167
    no_semi_colon_instr  go to state 168
    lvalue               go to state 124
    expression           go to state 125
    integer              go to state 63
    double               go to state 64
    text                 go to state 65


State 122

   49 instructions: instruction . ';'

    ';'  shift, and go to state 169


State 123

   51 instructions: no_semi_colon_instr .

    $default  reduce using rule 51 (instructions)


State 124

   65 no_semi_colon_instr: lvalue . '=' fundef
   66                    | lvalue . '=' expression
   71 lvalue: lvalue . '[' expression ']'
   88 expression: lvalue .
   89           | lvalue . '=' expression
   90           | lvalue . '=' fundef
  114           | lvalue . '?'

    '='  shift, and go to state 170
    '?'  shift, and go to state 94
    '['  shift, and go to state 95

    $default  reduce using rule 88 (expression)


State 125

   54 instruction: expression .
   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108

    $default  reduce using rule 54 (instruction)


State 126

    3 program: tBEGIN block ';' tEND .

    $default  reduce using rule 3 (program)


State 127

   22 declaration: data_type tIDENTIFIER '=' initializer ';' .

    $default  reduce using rule 22 (declaration)


State 128

   31 data_types: data_types ',' data_type .
   39 function_type: data_type . '<' opt_data_types '>'

    '<'  shift, and go to state 30

    $default  reduce using rule 31 (data_types)


State 129

   14 declaration: tPUBLIC tTYPE_VAR tIDENTIFIER '=' initializer ';' .

    $default  reduce using rule 14 (declaration)


State 130

   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression
  111           | tSIZEOF '(' expression . ')'

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108
    ')'   shift, and go to state 171


State 131

   79 args: fundef .

    $default  reduce using rule 79 (args)


State 132

   73 lvalue: tIDENTIFIER '(' opt_args . ')' '[' expression ']'
  108 expression: tIDENTIFIER '(' opt_args . ')'

    ')'  shift, and go to state 172


State 133

   77 opt_args: args .
   80 args: args . ',' expression
   81     | args . ',' fundef

    ','  shift, and go to state 173

    $default  reduce using rule 77 (opt_args)


State 134

   78 args: expression .
   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108

    $default  reduce using rule 78 (args)


State 135

  113 expression: '[' expression ']' .

    $default  reduce using rule 113 (expression)


State 136

   45 argdec: data_type tIDENTIFIER .

    $default  reduce using rule 45 (argdec)


State 137

   74 lvalue: '(' fundef ')' . '(' opt_args ')' '[' expression ']'
  109 expression: '(' fundef ')' . '(' opt_args ')'

    '('  shift, and go to state 174


State 138

   40 fundef: '(' opt_argdecs ')' . tRETTYPE data_type ':' block ';'

    tRETTYPE  shift, and go to state 175


State 139

   44 argdecs: argdecs ',' . argdec

    tTYPE_INT     shift, and go to state 5
    tTYPE_DOUBLE  shift, and go to state 6
    tTYPE_TEXT    shift, and go to state 7
    tTYPE_VOID    shift, and go to state 8
    '['           shift, and go to state 9

    data_type      go to state 85
    basic_type     go to state 15
    function_type  go to state 16
    argdec         go to state 176


State 140

   72 lvalue: '(' expression ')' . '[' expression ']'
  112 expression: '(' expression ')' .

    '['  shift, and go to state 177

    '['       [reduce using rule 112 (expression)]
    $default  reduce using rule 112 (expression)


State 141

   75 lvalue: '@' '(' opt_args . ')' '[' expression ']'
  110 expression: '@' '(' opt_args . ')'

    ')'  shift, and go to state 178


State 142

   90 expression: lvalue '=' fundef .

    $default  reduce using rule 90 (expression)


State 143

   89 expression: lvalue '=' expression .
   91           | expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108

    $default  reduce using rule 89 (expression)


State 144

   71 lvalue: lvalue '[' expression . ']'
   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108
    ']'   shift, and go to state 179


State 145

   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  102           | expression tAND expression .
  103           | expression . tOR expression

    tNE  shift, and go to state 98
    tLE  shift, and go to state 99
    tGE  shift, and go to state 100
    tEQ  shift, and go to state 101
    '<'  shift, and go to state 102
    '>'  shift, and go to state 103
    '+'  shift, and go to state 104
    '-'  shift, and go to state 105
    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    $default  reduce using rule 102 (expression)


State 146

   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression
  103           | expression tOR expression .

    tAND  shift, and go to state 96
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108

    $default  reduce using rule 103 (expression)


State 147

   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  101           | expression tNE expression .
  102           | expression . tAND expression
  103           | expression . tOR expression

    tLE  shift, and go to state 99
    tGE  shift, and go to state 100
    '<'  shift, and go to state 102
    '>'  shift, and go to state 103
    '+'  shift, and go to state 104
    '-'  shift, and go to state 105
    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    $default  reduce using rule 101 (expression)


State 148

   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   97           | expression tLE expression .
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    '+'  shift, and go to state 104
    '-'  shift, and go to state 105
    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    $default  reduce using rule 97 (expression)


State 149

   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
   99           | expression tGE expression .
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    '+'  shift, and go to state 104
    '-'  shift, and go to state 105
    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    $default  reduce using rule 99 (expression)


State 150

   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   98           | expression tEQ expression .
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tLE  shift, and go to state 99
    tGE  shift, and go to state 100
    '<'  shift, and go to state 102
    '>'  shift, and go to state 103
    '+'  shift, and go to state 104
    '-'  shift, and go to state 105
    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    $default  reduce using rule 98 (expression)


State 151

   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   96           | expression '<' expression .
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    '+'  shift, and go to state 104
    '-'  shift, and go to state 105
    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    $default  reduce using rule 96 (expression)


State 152

   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  100           | expression '>' expression .
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    '+'  shift, and go to state 104
    '-'  shift, and go to state 105
    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    $default  reduce using rule 100 (expression)


State 153

   91 expression: expression . '+' expression
   91           | expression '+' expression .
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    $default  reduce using rule 91 (expression)


State 154

   91 expression: expression . '+' expression
   92           | expression . '-' expression
   92           | expression '-' expression .
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    '*'  shift, and go to state 106
    '/'  shift, and go to state 107
    '%'  shift, and go to state 108

    $default  reduce using rule 92 (expression)


State 155

   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   93           | expression '*' expression .
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    $default  reduce using rule 93 (expression)


State 156

   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   94           | expression '/' expression .
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    $default  reduce using rule 94 (expression)


State 157

   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   95           | expression '%' expression .
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    $default  reduce using rule 95 (expression)


State 158

   12 declaration: tPUBLIC data_type tIDENTIFIER '=' initializer ';' .

    $default  reduce using rule 12 (declaration)


State 159

   55 instruction: tWRITE expressions .
   83 expressions: expressions . ',' expression

    ','  shift, and go to state 180

    $default  reduce using rule 55 (instruction)


State 160

   82 expressions: expression .
   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108

    $default  reduce using rule 82 (expressions)


State 161

   56 instruction: tWRITELN expressions .
   83 expressions: expressions . ',' expression

    ','  shift, and go to state 180

    $default  reduce using rule 56 (instruction)


State 162

   63 no_semi_colon_instr: tIF '(' . expression ')' tTHEN block ';'
   64                    | tIF '(' . expression ')' tTHEN block ';' elif

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 181
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 163

   53 instruction: tWHILE '(' . expression ')' tDO block

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 182
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 164

   61 instruction: tRETURN fundef .

    $default  reduce using rule 61 (instruction)


State 165

   60 instruction: tRETURN expression .
   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108

    $default  reduce using rule 60 (instruction)


State 166

   46 block: '{' opt_decs opt_instrs '}' .

    $default  reduce using rule 46 (block)


State 167

   50 instructions: instructions instruction . ';'

    ';'  shift, and go to state 183


State 168

   52 instructions: instructions no_semi_colon_instr .

    $default  reduce using rule 52 (instructions)


State 169

   49 instructions: instruction ';' .

    $default  reduce using rule 49 (instructions)


State 170

   65 no_semi_colon_instr: lvalue '=' . fundef
   66                    | lvalue '=' . expression
   89 expression: lvalue '=' . expression
   90           | lvalue '=' . fundef

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 57
    '@'          shift, and go to state 58

    fundef      go to state 184
    lvalue      go to state 61
    expression  go to state 185
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 171

  111 expression: tSIZEOF '(' expression ')' .

    $default  reduce using rule 111 (expression)


State 172

   73 lvalue: tIDENTIFIER '(' opt_args ')' . '[' expression ']'
  108 expression: tIDENTIFIER '(' opt_args ')' .

    '['  shift, and go to state 186

    '['       [reduce using rule 108 (expression)]
    $default  reduce using rule 108 (expression)


State 173

   80 args: args ',' . expression
   81     | args ',' . fundef

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 57
    '@'          shift, and go to state 58

    fundef      go to state 187
    lvalue      go to state 61
    expression  go to state 188
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 174

   74 lvalue: '(' fundef ')' '(' . opt_args ')' '[' expression ']'
  109 expression: '(' fundef ')' '(' . opt_args ')'

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 57
    '@'          shift, and go to state 58

    $default  reduce using rule 76 (opt_args)

    fundef      go to state 131
    lvalue      go to state 61
    opt_args    go to state 189
    args        go to state 133
    expression  go to state 134
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 175

   40 fundef: '(' opt_argdecs ')' tRETTYPE . data_type ':' block ';'

    tTYPE_INT     shift, and go to state 5
    tTYPE_DOUBLE  shift, and go to state 6
    tTYPE_TEXT    shift, and go to state 7
    tTYPE_VOID    shift, and go to state 8
    '['           shift, and go to state 9

    data_type      go to state 190
    basic_type     go to state 15
    function_type  go to state 16


State 176

   44 argdecs: argdecs ',' argdec .

    $default  reduce using rule 44 (argdecs)


State 177

   72 lvalue: '(' expression ')' '[' . expression ']'

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 191
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 178

   75 lvalue: '@' '(' opt_args ')' . '[' expression ']'
  110 expression: '@' '(' opt_args ')' .

    '['  shift, and go to state 192

    '['       [reduce using rule 110 (expression)]
    $default  reduce using rule 110 (expression)


State 179

   71 lvalue: lvalue '[' expression ']' .

    $default  reduce using rule 71 (lvalue)


State 180

   83 expressions: expressions ',' . expression

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 193
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 181

   63 no_semi_colon_instr: tIF '(' expression . ')' tTHEN block ';'
   64                    | tIF '(' expression . ')' tTHEN block ';' elif
   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108
    ')'   shift, and go to state 194


State 182

   53 instruction: tWHILE '(' expression . ')' tDO block
   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108
    ')'   shift, and go to state 195


State 183

   50 instructions: instructions instruction ';' .

    $default  reduce using rule 50 (instructions)


State 184

   65 no_semi_colon_instr: lvalue '=' fundef .
   90 expression: lvalue '=' fundef .

    tAND      reduce using rule 90 (expression)
    tOR       reduce using rule 90 (expression)
    tNE       reduce using rule 90 (expression)
    tLE       reduce using rule 90 (expression)
    tGE       reduce using rule 90 (expression)
    tEQ       reduce using rule 90 (expression)
    '<'       reduce using rule 90 (expression)
    '>'       reduce using rule 90 (expression)
    '+'       reduce using rule 65 (no_semi_colon_instr)
    '+'       [reduce using rule 90 (expression)]
    '-'       reduce using rule 65 (no_semi_colon_instr)
    '-'       [reduce using rule 90 (expression)]
    '*'       reduce using rule 90 (expression)
    '/'       reduce using rule 90 (expression)
    '%'       reduce using rule 90 (expression)
    ';'       reduce using rule 90 (expression)
    $default  reduce using rule 65 (no_semi_colon_instr)


State 185

   66 no_semi_colon_instr: lvalue '=' expression .
   89 expression: lvalue '=' expression .
   91           | expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108

    ';'       reduce using rule 89 (expression)
    $default  reduce using rule 66 (no_semi_colon_instr)


State 186

   73 lvalue: tIDENTIFIER '(' opt_args ')' '[' . expression ']'

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 196
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 187

   81 args: args ',' fundef .

    $default  reduce using rule 81 (args)


State 188

   80 args: args ',' expression .
   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108

    $default  reduce using rule 80 (args)


State 189

   74 lvalue: '(' fundef ')' '(' opt_args . ')' '[' expression ']'
  109 expression: '(' fundef ')' '(' opt_args . ')'

    ')'  shift, and go to state 197


State 190

   39 function_type: data_type . '<' opt_data_types '>'
   40 fundef: '(' opt_argdecs ')' tRETTYPE data_type . ':' block ';'

    '<'  shift, and go to state 30
    ':'  shift, and go to state 198


State 191

   72 lvalue: '(' expression ')' '[' expression . ']'
   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108
    ']'   shift, and go to state 199


State 192

   75 lvalue: '@' '(' opt_args ')' '[' . expression ']'

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 200
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 193

   83 expressions: expressions ',' expression .
   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108

    $default  reduce using rule 83 (expressions)


State 194

   63 no_semi_colon_instr: tIF '(' expression ')' . tTHEN block ';'
   64                    | tIF '(' expression ')' . tTHEN block ';' elif

    tTHEN  shift, and go to state 201


State 195

   53 instruction: tWHILE '(' expression ')' . tDO block

    tDO  shift, and go to state 202


State 196

   73 lvalue: tIDENTIFIER '(' opt_args ')' '[' expression . ']'
   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108
    ']'   shift, and go to state 203


State 197

   74 lvalue: '(' fundef ')' '(' opt_args ')' . '[' expression ']'
  109 expression: '(' fundef ')' '(' opt_args ')' .

    '['  shift, and go to state 204

    '['       [reduce using rule 109 (expression)]
    $default  reduce using rule 109 (expression)


State 198

   40 fundef: '(' opt_argdecs ')' tRETTYPE data_type ':' . block ';'

    '{'  shift, and go to state 38

    block  go to state 205


State 199

   72 lvalue: '(' expression ')' '[' expression ']' .

    $default  reduce using rule 72 (lvalue)


State 200

   75 lvalue: '@' '(' opt_args ')' '[' expression . ']'
   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108
    ']'   shift, and go to state 206


State 201

   63 no_semi_colon_instr: tIF '(' expression ')' tTHEN . block ';'
   64                    | tIF '(' expression ')' tTHEN . block ';' elif

    '{'  shift, and go to state 38

    block  go to state 207


State 202

   53 instruction: tWHILE '(' expression ')' tDO . block

    '{'  shift, and go to state 38

    block  go to state 208


State 203

   73 lvalue: tIDENTIFIER '(' opt_args ')' '[' expression ']' .

    $default  reduce using rule 73 (lvalue)


State 204

   74 lvalue: '(' fundef ')' '(' opt_args ')' '[' . expression ']'

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 209
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 205

   40 fundef: '(' opt_argdecs ')' tRETTYPE data_type ':' block . ';'

    ';'  shift, and go to state 210


State 206

   75 lvalue: '@' '(' opt_args ')' '[' expression ']' .

    $default  reduce using rule 75 (lvalue)


State 207

   63 no_semi_colon_instr: tIF '(' expression ')' tTHEN block . ';'
   64                    | tIF '(' expression ')' tTHEN block . ';' elif

    ';'  shift, and go to state 211


State 208

   53 instruction: tWHILE '(' expression ')' tDO block .

    $default  reduce using rule 53 (instruction)


State 209

   74 lvalue: '(' fundef ')' '(' opt_args ')' '[' expression . ']'
   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108
    ']'   shift, and go to state 212


State 210

   40 fundef: '(' opt_argdecs ')' tRETTYPE data_type ':' block ';' .

    $default  reduce using rule 40 (fundef)


State 211

   63 no_semi_colon_instr: tIF '(' expression ')' tTHEN block ';' .
   64                    | tIF '(' expression ')' tTHEN block ';' . elif

    tELIF  shift, and go to state 213
    tELSE  shift, and go to state 214

    $default  reduce using rule 63 (no_semi_colon_instr)

    elif  go to state 215


State 212

   74 lvalue: '(' fundef ')' '(' opt_args ')' '[' expression ']' .

    $default  reduce using rule 74 (lvalue)


State 213

   68 elif: tELIF . '(' expression ')' tTHEN block ';'
   69     | tELIF . '(' expression ')' tTHEN block ';' elif

    '('  shift, and go to state 216


State 214

   67 elif: tELSE . block ';'

    '{'  shift, and go to state 38

    block  go to state 217


State 215

   64 no_semi_colon_instr: tIF '(' expression ')' tTHEN block ';' elif .

    $default  reduce using rule 64 (no_semi_colon_instr)


State 216

   68 elif: tELIF '(' . expression ')' tTHEN block ';'
   69     | tELIF '(' . expression ')' tTHEN block ';' elif

    tNOT         shift, and go to state 46
    tSIZEOF      shift, and go to state 47
    tINPUT       shift, and go to state 48
    tINTEGER     shift, and go to state 49
    tDOUBLE      shift, and go to state 50
    tIDENTIFIER  shift, and go to state 51
    tTEXT        shift, and go to state 52
    tNULL        shift, and go to state 53
    '+'          shift, and go to state 54
    '-'          shift, and go to state 55
    '['          shift, and go to state 56
    '('          shift, and go to state 77
    '@'          shift, and go to state 58

    lvalue      go to state 61
    expression  go to state 218
    integer     go to state 63
    double      go to state 64
    text        go to state 65


State 217

   67 elif: tELSE block . ';'

    ';'  shift, and go to state 219


State 218

   68 elif: tELIF '(' expression . ')' tTHEN block ';'
   69     | tELIF '(' expression . ')' tTHEN block ';' elif
   91 expression: expression . '+' expression
   92           | expression . '-' expression
   93           | expression . '*' expression
   94           | expression . '/' expression
   95           | expression . '%' expression
   96           | expression . '<' expression
   97           | expression . tLE expression
   98           | expression . tEQ expression
   99           | expression . tGE expression
  100           | expression . '>' expression
  101           | expression . tNE expression
  102           | expression . tAND expression
  103           | expression . tOR expression

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97
    tNE   shift, and go to state 98
    tLE   shift, and go to state 99
    tGE   shift, and go to state 100
    tEQ   shift, and go to state 101
    '<'   shift, and go to state 102
    '>'   shift, and go to state 103
    '+'   shift, and go to state 104
    '-'   shift, and go to state 105
    '*'   shift, and go to state 106
    '/'   shift, and go to state 107
    '%'   shift, and go to state 108
    ')'   shift, and go to state 220


State 219

   67 elif: tELSE block ';' .

    $default  reduce using rule 67 (elif)


State 220

   68 elif: tELIF '(' expression ')' . tTHEN block ';'
   69     | tELIF '(' expression ')' . tTHEN block ';' elif

    tTHEN  shift, and go to state 221


State 221

   68 elif: tELIF '(' expression ')' tTHEN . block ';'
   69     | tELIF '(' expression ')' tTHEN . block ';' elif

    '{'  shift, and go to state 38

    block  go to state 222


State 222

   68 elif: tELIF '(' expression ')' tTHEN block . ';'
   69     | tELIF '(' expression ')' tTHEN block . ';' elif

    ';'  shift, and go to state 223


State 223

   68 elif: tELIF '(' expression ')' tTHEN block ';' .
   69     | tELIF '(' expression ')' tTHEN block ';' . elif

    tELIF  shift, and go to state 213
    tELSE  shift, and go to state 214

    $default  reduce using rule 68 (elif)

    elif  go to state 224


State 224

   69 elif: tELIF '(' expression ')' tTHEN block ';' elif .

    $default  reduce using rule 69 (elif)
